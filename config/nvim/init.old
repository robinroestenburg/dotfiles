" Use Vim settings, rather than Vi settings (much better!). This must be first,
" because it changes other options as a side effect.
set nocompatible


" Check whether Vundle needs to be installed. If so, install :)
let needsToInstallBundles=0
if !isdirectory(expand("~/.vim/bundle/vundle"))
  echo "\nInstalling Vim dependencies... Please be patient!\n"
  silent !mkdir -p ~/.vim/tmp
  silent !mkdir -p ~/.vim/swap
  silent !mkdir -p ~/.vim/undo
  silent !mkdir -p ~/.vim/bundle
  silent !mkfifo ~/.vim/commands-fifo
  silent !git clone https://github.com/gmarik/vundle ~/.vim/bundle/vundle
  let needsToInstallBundles=1
endif

" Setup Vundle
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
Bundle 'gmarik/vundle'

" Colorschemes
Bundle 'vim-scripts/tir_black'
Bundle 'vim-scripts/wombat256.vim'
Bundle 'powerline/powerline', { 'rtp': 'powerline/bindings/vim/' }

" Syntax & Language support
Bundle 'tpope/vim-cucumber'
Bundle 'tpope/vim-markdown'
Bundle 'hail2u/vim-css3-syntax'
Bundle 'othree/html5-syntax.vim'
Bundle 'mxw/vim-jsx'
Plugin 'pangloss/vim-javascript'

" Other
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-rails'
Bundle 'vim-scripts/netrw.vim'
Bundle 'godlygeek/tabular'


if needsToInstallBundles == 1
  echo "\nInstalling Bundles, please ignore key map error messages\n"
  :BundleInstall!
  echo "\nInstalled.\n"
endif


" Make backspace behave in a sane manner.
set backspace=indent,eol,start

" Switch syntax highlighting on
syntax on

" Enable file type detection and do language-dependent indenting.
filetype plugin indent on

" Turn backup off, since most stuff is in version control anyway. Gets rid of
" the annoying errors when re-opening the same file.
set nobackup
set nowb
set noswapfile

" When a file has been detected to have been changed outside of Vim and it has
" not been changed inside of Vim, automatically read it again.
set autoread

" Set the current shell to bash, because zsh does not use the correct Ruby
" version.
set shell=bash



" " Fast editing of the .vimrc
" nmap <leader>e :e! ~/.vimrc<cr>

" " When vimrc is edited, reload it
" autocmd! bufwritepost vimrc source ~/.vimrc

" Move a line of text using ALT+[jk] or Comamnd+[jk] on mac
" TODO: Was not working, look for new ones.


" Turn off F1
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

" Moving lines up and down in normal, insert and visual mode
nnoremap ∆ :m .+1<CR>==
nnoremap ˚ :m .-2<CR>==
inoremap ∆ <Esc>:m .+1<CR>==gi
inoremap ˚ <Esc>:m .-2<CR>==gi
vnoremap ∆ :m '>+1<CR>gv=gv
vnoremap ˚ :m '<-2<CR>gv=gv

" Shortcuts for using Tabularize, see:
" http://vimcasts.org/episodes/aligning-text-with-tabular-vim/
nmap <leader>a= :Tabularize /=<CR>
vmap <leader>a= :Tabularize /=<CR>
nmap <leader>a. :Tabularize /=><CR>
vmap <leader>a. :Tabularize /=><CR>
nmap <leader>a: :Tabularize /:\zs<CR>
vmap <leader>a: :Tabularize /:\zs<CR>

" Ack shortcut
noremap <Leader>s :Ack <cword> --ignore log/ --ignore db/ --ignore tmp/<cr>

" Since syntastic was added, :E has an ambiguous mapping.
" This reverts the old behaviour of starting Netrw.
cnoreabbrev E Explore

" Toggle the 'paste' option On/Off. When the 'paste' option is enabled, Vim
" turns off all Insert mode mappings and abbreviations and resets a host of
" options, including 'autoindent'.
set pastetoggle=<f5>

"
" Statusbar
"

" Show (partial) command in the last line of the screen.
set showcmd

" If in Insert, Replace or Visual mode put a message on the last line.
set showmode

" Always show a status line.
set laststatus=2

" Show the line and column number of the cursor position, separated by a comma.
set ruler
